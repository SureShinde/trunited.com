<?php
/**
 * Magebird.com
 *
 * @category   Magebird
 * @package    Magebird_Popup
 * @copyright  Copyright (c) 2016 Magebird (http://www.Magebird.com)
 * @license    http://www.magebird.com/licence
 * Any form of ditribution, sell, transfer forbidden see licence above
 * Code has been obfuscated to prevent licence violations  
 */
$_X=__FILE__;$_o='';$_B=strrev('edoced_46esab');eval($_B($_o));